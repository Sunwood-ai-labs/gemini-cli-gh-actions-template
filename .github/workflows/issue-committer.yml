name: Gemini Agent - Create PR from Issue

on:
  issues:
    types: [opened]

jobs:
  gemini-agent:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create new branch
        id: branch
        run: |
          branch_name="gemini/issue-${{ github.event.issue.number }}"
          git checkout -b $branch_name
          echo "name=$branch_name" >> $GITHUB_OUTPUT

      - name: Configure git author as Gemini
        run: |
          git config user.name "Gemini Agent"
          git config user.email "gemini-agent@users.noreply.github.com"

      - name: Run Gemini Agent to apply changes
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          echo "Installing @google/gemini-cli..."
          npm install -g @google/gemini-cli

          # Create a meta-prompt using environment variable to avoid shell interpretation
          cat > prompt.txt << 'PROMPT_EOF'
          You are an expert software engineer. Your task is to modify the files in the current directory based on the user's request. 

          The user's request is:
          PROMPT_EOF
          
          # Append the issue body safely using environment variable
          echo "$ISSUE_BODY" >> prompt.txt
          
          echo "" >> prompt.txt
          echo "Please apply the changes directly to the files." >> prompt.txt

          echo "Running Gemini Agent with the following prompt:"
          cat prompt.txt

          # Run the gemini cli with the prompt from file
          gemini -y -p "$(cat prompt.txt)"

          echo "Gemini Agent has finished. Staging changes..."
          git add .

      - name: Commit changes
        run: |
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "feat: Apply changes for issue #${{ github.event.issue.number }}"
          fi

      - name: Push changes
        run: |
          git push origin ${{ steps.branch.outputs.name }}

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "âœ¨ PR for Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}" \
            --body "This PR was automatically generated by the Gemini Agent in response to issue #${{ github.event.issue.number }}. \
            \
            **Prompt:**\
            > ${{ github.event.issue.body }}" \
            --base ${{ github.event.repository.default_branch }} \
            --head ${{ steps.branch.outputs.name }}
